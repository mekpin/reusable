on:
  workflow_call:
    inputs:
      service_name:
        description: 'Name of service/web app repository'
        required: false
        type: string
#      secrets:
#        required: true
 #       type: string
      caller_branch:
        required: false
        type: string
      

env:
#  untuk default isi dengan nama repo
#  SERVICE_NAME: ${{ inputs.service_name || github.event.repository.name  }}
  SERVICE_NAME: ${{ inputs.service_name || 'ga masuk'  }}
#  ssh_token: ${{ inputs.secrets || 'ga masuk'  }}
  runner_os: ${{ 'macos'  }}
  BUILD_COMMAND: ${{ inputs.caller_branch }}



jobs:
  define-runner:
    runs-on: ubuntu-latest
    outputs: 
      nama_runner: ${{ steps.declarerunner.outputs.value }}
    steps:
      - id: declarerunner
        run: |
          if ${{startsWith(env.runner_os, 'ubuntu')}}
          then
            echo "value=ubuntu-latest" >> $GITHUB_OUTPUT
            echo "::notice title=runner::ubuntu-latest"
          elif ${{startsWith(env.runner_os, 'mac')}}
          then
            echo "value=macos-latest" >> $GITHUB_OUTPUT
            echo "::notice title=runner::macos-latest"
          fi


  broadcast:
    needs: define-runner
    runs-on: ubuntu-latest
    steps:
      - name: input to variable service_name
        id: naming 
        run: echo "tags=mekpin/${{ env.SERVICE_NAME }}:${GITHUB_REF#refs/*/}"

      - name: read output tags dari job yang sama
        id: read_service_name
        run: echo "::notice title=naming tag created::${{ steps.naming.outputs.tags }}" 

      - name: read nama runner dari jobs lain
        id: read_runner_name
        run: echo "berikut hasil readnya ---> ${{ needs.define-runner.outputs.nama_runner}}"
        
      - name: read github action caller branch name
        id: read_caller_branch_name
        run: echo "${GITHUB_REF_NAME}"
        
      - name: read github action inputs build_env
        id: read_input_env
        run: echo "${{env.BUILD_COMMAND}}"


#      - name: read secret ssh_token
#        id: read_token
#        run: echo "::notice title=token token created::${{ env.ssh_token }}" 
