on:
  workflow_call:
    inputs:
      service_name:
        description: 'Name of service/web app repository'
        required: false
        type: string
#      secrets:
#        required: true
 #       type: string
      caller_branch:
        required: false
        type: string
      

env:
#  untuk default isi dengan nama repo
#  SERVICE_NAME: ${{ inputs.service_name || github.event.repository.name  }}
  SERVICE_NAME: ${{ inputs.service_name || 'ga masuk'  }}
#  ssh_token: ${{ inputs.secrets || 'ga masuk'  }}
  runner_os: ${{ 'macos'  }}
  BUILD_COMMAND: ${{ inputs.caller_branch }}



jobs:
  define-runner:
    runs-on: ubuntu-latest
    outputs: 
      nama_runner: ${{ steps.declarerunner.outputs.value }}
    steps:
      - id: declarerunner
        run: |
          if ${{startsWith(env.runner_os, 'ubuntu')}}
          then
            echo "value=ubuntu-latest" >> $GITHUB_OUTPUT
            echo "::notice title=runner::ubuntu-latest"
          elif ${{startsWith(env.runner_os, 'mac')}}
          then
            echo "value=macos-latest" >> $GITHUB_OUTPUT
            echo "::notice title=runner::macos-latest"
          fi


  broadcast:
    needs: define-runner
    runs-on: ubuntu-latest
    outputs: 
      branch_name: ""
    steps:
#    CHECKOUT PENTING BUAT DPT REF BRANCH NAME DAN TRIGGERR!!!!!
      - uses: actions/checkout@v3
      
      
      - name: input to variable service_name
        id: naming 
        run: echo "tags=mekpin/${{ env.SERVICE_NAME }}:${GITHUB_REF#refs/*/}"

      - name: read output tags dari job yang sama
        id: read_service_name
        run: echo "::notice title=naming tag created::${{ steps.naming.outputs.tags }}" 

      - name: mencoba ambil branch menggunakan ${GITHUB_REF#refs/*/}
        id: ambil_branch 
        run: echo "${GITHUB_REF#refs/*/}"

      - name: read nama runner dari jobs lain
        id: read_runner_name
        run: echo "berikut hasil readnya ---> ${{ needs.define-runner.outputs.nama_runner}}"
        
      - name: read github action caller branch name using GITHUB_REF_NAME
        id: read_caller_branch
        run: echo "branch_name=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
              
      - run: echo "${{steps.read_caller_branch.outputs.branch_name}}"
      
      - name: read github action caller branch name using github.ref_name
        id: read_caller_branch_ref_name
        run: echo "branch_name=${{github.ref_name}}" >> $GITHUB_OUTPUT
              
      - run: echo "${{steps.read_caller_branch_ref_name.outputs.branch_name}}"
        
      - name: read github action caller branch name using GITHUB_BASE_REF
        id: read_caller_branch_base_ref
        run: echo "branch_name=${GITHUB_BASE_REF}" >> $GITHUB_OUTPUT
        
      - run: echo "${{steps.read_caller_branch_base_ref.outputs.branch_name}}"

      - name: read github action caller branch name using github.event.base_ref
        id: read_caller_branch_github_event_base_ref
        run: echo "branch_name=${{github.event.base_ref}}" >> $GITHUB_OUTPUT
        
      - run: echo "${{steps.read_caller_branch_github_event_base_ref.outputs.branch_name}}"
        
      - name: read github action caller branch name using GITHUB_HEAD_REF
        id: read_caller_branch_head_ref
        run: echo "branch_name=${GITHUB_HEAD_REF}" >> $GITHUB_OUTPUT
        
      - run: echo "${{steps.read_caller_branch_head_ref.outputs.branch_name}}"

      - name: read github action caller branch name using github.event.head_ref
        id: read_caller_branch_github_event_head_ref
        run: echo "branch_name=${{github.event.head_ref}}" >> $GITHUB_OUTPUT
        
      - run: echo "${{steps.read_caller_branch_github_event_head_ref.outputs.branch_name}}"
        
      - name: write github action caller branch name using GITHUB_HEAD_REF to BUILD_COMMAND env
        id: write_caller_branch_name
        run: echo "BUILD_COMMAND=${{env.GITHUB_HEAD_REF}}" >> $GITHUB_ENV

      - name: read github action caller using BUILD_COMMAND env (from inputs caller_branch) menggunakan $BUILD_COMMAND
        id: read_caller_branch_name
        run: echo "keluarin isi env BUILD_COMAND ----> $BUILD_COMMAND"
        
      - name: read github action inputs build_env menggunakan env.BUILD_COMMAND
        id: read_input_env
        run: echo "${{env.BUILD_COMMAND}}"


#      - name: read secret ssh_token
#        id: read_token
#        run: echo "::notice title=token token created::${{ env.ssh_token }}" 
